//aritmatika//

SUBTRACT -> subtract
ADD -> add
MULT -> mult
DIV -> div
MOD -> mod
POWER -> power
INCRE -> incre
DECRE -> decre
PLUSEQ -> pluseq
SUBEQ -> subeq
POWEQ -> poweq
DIVEQ -> diveq
MULTEQ -> multeq
MODEQ -> modeq
EQUAL -> equal


//logika//

IS_EQUAL -> is_equal
IS_EQUALS -> is_equals
IS_NOT_EQUAL -> is_not_equal
IS_NOT_EQUALS -> is_not_equals
AND -> and
OR -> or
NO -> no
G -> g
L -> l
GE -> ge
LE -> le

//variabel//

CONST -> const
VAR -> var
LET -> let
FINAL -> final
NULL -> null

//penggunaan//

FOR -> for
WHILE -> while
IF -> if
ELSE -> else
ELSE_IF -> else_if
SWITCH -> switch
CASE -> case
TRY -> try
THROW -> throw
CATCH -> catch
RETURN -> return
CLASS -> class
FUNC -> func
CONTINUE -> continue
FINALLY -> finally
BREAK -> break
TRUE -> true
FALSE -> false


//key//

COMMA -> comma
DOT -> dot
QUOTATION -> quotation
DOUBLE_QUOTATION -> double_quotation
SEMICOLON -> semicolon
DOUBLE_DOT -> double_dot
LCR -> lcr
RCR -> rcr
LPR -> lpr
LPR -> lpr

VABOL -> VAR BOOL VAR BOOL VABOL
CONSTBOL -> CONST BOOL CONST BOOL CONSTBOL
LETBOL -> LET BOOL LET BOOL LETBOL
S -> S SEMICOLON
S -> SEMICOLON S
S -> SS
SS -> PART SS
PART -> CLASS_STATE
PART -> FUNC_STATE
PART -> FOR_STATE
PART -> WHILE_STATE
PART -> IF_STATE
PART -> SWITCH_STATE
PART -> THROW_STATE
PART -> CATCH_STATE
PART -> FINALLY_STATE
PART -> DEFAULT_STATE
PART -> CASE_STATE
PART -> SENTENCE
SS -> CLASS_STATE
SS -> FUNC_STATE
SS -> FOR_STATE
SS -> WHILE_STATE
SS -> IF_STATE
SS -> SWITCH_STATE
SS -> THROW_STATE
SS -> CATCH_STATE
SS -> FINALLY_STATE
SS -> DEFAULT_STATE
SS -> CASE_STATE
SS -> SENTENCE
SENTENCE -> BREAK
SENTENCE -> CONTINUE
SENTENCE -> WHILE_STATE
SENTENCE -> ASSIGN
SENTENCE -> IF_STMT
SENTENCE -> RETURN
SENTENCE -> THROW_STATE
SENTENCE -> CATCH_STATE
SENTENCE -> CASE_STATE
SENTENCE -> TRY_STATE
SENTENCE -> DEFAULT_STATE
SENTENCE -> FINALLY_STATE
SENTENCE -> FOR_STATE
SENTENCE -> SEMICOLON SENTENCE
SENTENCE -> SENTENCE SEMICOLON
ARITMAT_OPERATOR -> ADD
ARITMAT_OPERATOR -> SUBTRACT
ARITMAT_OPERATOR -> MULT
ARITMAT_OPERATOR -> DIV
ARITMAT_OPERATOR -> MOD
ARITMAT_OPERATOR -> POWER
INDRE -> INCRE
INDRE -> DECRE
GL -> G
GL -> GE
GL -> L
GL -> LE
BOOL -> IS_EQUAL
BOOL -> IS_NOT_EQUAL
BOOL -> IS_EQUALS
BOOL -> IS_NOT_EQUALS
BOOL -> G
BOOL -> GE
BOOL -> L
BOOL -> LE
BOOL -> AND
BOOL -> OR


FOR_STMT -> LPR VAR SEMICOLON VAR GL VAR SEMICOLON VAR INDRE RPR LCR SENTENCE RCR
FOR_STMT -> LPR VAR SEMICOLON VAR GL VAR SEMICOLON VAR INDRE RPR LCR FOR_STMT RCR
FOR_STMT -> LPR VAR SEMICOLON VAR GL VAR SEMICOLON INDRE VAR RPR LCR SENTENCE RCR
FOR_STMT -> LPR VAR SEMICOLON VAR GL VAR SEMICOLON INDRE VAR RPR LCR FOR_STMT RCR
FOR_STMT -> LPR CONST SEMICOLON VAR GL VAR SEMICOLON VAR INDRE RPR LCR SENTENCE RCR
FOR_STMT -> LPR CONST SEMICOLON VAR GL VAR SEMICOLON VAR INDRE RPR LCR FOR_STMT RCR
FOR_STMT -> LPR CONST SEMICOLON VAR GL VAR SEMICOLON INDRE VAR RPR LCR SENTENCE RCR
FOR_STMT -> LPR CONST SEMICOLON VAR GL VAR SEMICOLON INDRE VAR RPR LCR FOR_STMT RCR
FOR_STMT -> LPR LET SEMICOLON VAR GL VAR SEMICOLON VAR INDRE RPR LCR SENTENCE RCR
FOR_STMT -> LPR LET SEMICOLON VAR GL VAR SEMICOLON VAR INDRE RPR LCR FOR_STMT RCR
FOR_STMT -> LPR LET SEMICOLON VAR GL VAR SEMICOLON INDRE VAR RPR LCR SENTENCE RCR
FOR_STMT -> LPR LET SEMICOLON VAR GL VAR SEMICOLON INDRE VAR RPR LCR FOR_STMT RCR
IF_STMT -> LPR VAR RPR LCR SENTENCE RCR
IF_STMT -> LPR VAR RPR LCR IF_STMT RCR
IF_STMT -> LPR NO VAR RPR LCR SENTENCE RCR
IF_STMT -> LPR NO VAR RPR LCR IF_STMT RCR
IF_STMT -> LPR VAR BOOL VAR RPR LCR SENTENCE RCR
IF_STMT -> LPR VAR BOOL VAR RPR LCR IF_STMT RCR
IF_STMT -> LPR VABOL VAR RPR LCR SENTENCE RCR
IF_STMT -> LPR VABOL VAR RPR LCR IF_STMT RCR
IF_STMT -> LPR CONST RPR LCR SENTENCE RCR
IF_STMT -> LPR CONST RPR LCR IF_STMT RCR
IF_STMT -> LPR NO CONST RPR LCR SENTENCE RCR
IF_STMT -> LPR NO CONST RPR LCR IF_STMT RCR
IF_STMT -> LPR CONST BOOL CONST RPR LCR SENTENCE RCR
IF_STMT -> LPR CONST BOOL CONST RPR LCR IF_STMT RCR
IF_STMT -> LPR CONSTBOL CONST RPR LCR SENTENCE RCR
IF_STMT -> LPR CONSTBOL CONST RPR LCR IF_STMT RCR
IF_STMT -> LPR LET RPR LCR SENTENCE RCR
IF_STMT -> LPR LET RPR LCR IF_STMT RCR
IF_STMT -> LPR NO LET RPR LCR SENTENCE RCR
IF_STMT -> LPR NO LET RPR LCR IF_STMT RCR
IF_STMT -> LPR LET BOOL LET RPR LCR SENTENCE RCR
IF_STMT -> LPR LET BOOL LET RPR LCR IF_STMT RCR
IF_STMT -> LPR LETBOL LET RPR LCR SENTENCE RCR
IF_STMT -> LPR LETBOL LET RPR LCR IF_STMT RCR









































