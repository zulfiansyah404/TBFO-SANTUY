S -> WHILE_STATEMENT SUBPROGRAM S
S -> WHILE_STATEMENT SUBREAK S
S -> WHILE_STATEMENT SUBCONTINUE S
S -> FOR_STATEMENT SUBPROGRAM S
S -> FOR_STATEMENT SUBREAK S
S -> FOR_STATEMENT SUBCONTINUE S
S -> SWITCH_STATEMENT SUBSWITCH S
S -> IF_STATEMENT SUBPROGRAM S
S -> IF_STATEMENT SUBPROGRAM IF_ELSE S
S -> TRY_STATEMENT S
S -> TRY_STATEMENT CATCH_STATEMENT S
S -> TRY_STATEMENT CATCH_STATEMENT FINALLY_STATEMENT S
S -> FUNCTION_STATEMENT SUBPROGRAM S
S -> WHILE_STATEMENT SUBPROGRAM
S -> WHILE_STATEMENT SUBREAK
S -> WHILE_STATEMENT SUBCONTINUE
S -> FOR_STATEMENT SUBPROGRAM
S -> FOR_STATEMENT SUBREAK
S -> FOR_STATEMENT SUBCONTINUE
S -> SWITCH_STATEMENT SUBSWITCH
S -> IF_STATEMENT SUBPROGRAM
S -> IF_STATEMENT SUBPROGRAM IF_ELSE
S -> TRY_STATEMENT
S -> TRY_STATEMENT CATCH_STATEMENT
S -> TRY_STATEMENT CATCH_STATEMENT FINALLY_STATEMENT
S -> SS SEMICOLON
S -> SS SEMICOLON S
S -> FUNCTION_STATEMENT SUBPROGRAM
SS -> CONSLOG_STATEMENT
SS -> DECLARATION
BREAK -> break
CONTINUE -> continue
FOR -> for
WHILE -> while
IF -> if
ELSE -> else
SWITCH -> switch
CASE -> case
DEFAULT -> default
TRY -> try
CATCH -> catch
FINALLY -> finally
THROW -> throw
FUNC -> func
CONSLOG -> conslog
WHILE_STATEMENT -> WHILE LPR CONDITION RPR
FOR_STATEMENT -> FOR LPR DECLARATION SEMICOLON CONDITION SEMICOLON DECLARATION RPR
IF_STATEMENT -> IF LPR CONDITION RPR
SWITCH_STATEMENT -> SWITCH LPR B_VAR RPR
CASE_STATEMENT -> CASE B_VAR DOUBLE_DOT BREAK SEMICOLON
CASE_STATEMENT -> CASE B_VAR DOUBLE_DOT S BREAK SEMICOLON
CASE_STATEMENT -> CASE B_VAR DOUBLE_DOT S
CASE_STATEMENT -> CASE B_VAR DOUBLE_DOT BREAK SEMICOLON CASE_STATEMENT
CASE_STATEMENT -> CASE B_VAR DOUBLE_DOT S BREAK SEMICOLON CASE_STATEMENT
CASE_STATEMENT -> CASE B_VAR DOUBLE_DOT S CASE_STATEMENT
DEFAULT_STATEMENT -> DEFAULT DOUBLE_DOT BREAK SEMICOLON
DEFAULT_STATEMENT -> DEFAULT DOUBLE_DOT S BREAK SEMICOLON
DEFAULT_STATEMENT -> DEFAULT DOUBLE_DOT S
TRY_STATEMENT -> TRY LCR S RCR
TRY_STATEMENT -> TRY LCR SUBTHROW RCR
TRY_STATEMENT -> TRY LCR RCR
CATCH_STATEMENT -> CATCH LPR B_VAR RPR LCR S RCR
CATCH_STATEMENT -> CATCH LPR B_VAR RPR LCR RCR
FINALLY_STATEMENT -> FINALLY LCR S RCR
FINALLY_STATEMENT -> FINALLY LCR RCR
FUNCTION_STATEMENT -> FUNC VARIABLE LPR RPR
FUNCTION_STATEMENT -> FUNC VARIABLE LPR PARAM RPR
CONSLOG_STATEMENT -> CONSLOG LPR CONSLOG_VALUE RPR
CONSLOG_VALUE -> B_VAR
CONSLOG_VALUE -> CONSLOG_VALUE COMMA CONSLOG_VALUE
IF_ELSE -> ELSE IF_STATEMENT SUBPROGRAM
IF_ELSE -> ELSE IF_STATEMENT SUBPROGRAM IF_ELSE
IF_ELSE -> ELSE SUBPROGRAM
SUBREAK -> LCR IF_STATEMENT LCR BREAK SEMICOLON RCR RCR
SUBREAK -> LCR IF_STATEMENT LCR S BREAK SEMICOLON RCR RCR
SUBCONTINUE -> LCR IF_STATEMENT LCR CONTINUE SEMICOLON RCR RCR
SUBCONTINUE -> LCR IF_STATEMENT LCR S CONTINUE SEMICOLON RCR RCR
SUBPROGRAM -> LCR S RCR
SUBPROGRAM -> LCR RCR
SUBPROGRAM -> SS SEMICOLON
SUBSWITCH -> LCR CASE_STATEMENT RCR
SUBSWITCH -> LCR CASE_STATEMENT DEFAULT_STATEMENT RCR
SUBTHROW -> IF_STATEMENT THROW B_VAR SEMICOLON
SUBTHROW -> IF_STATEMENT THROW B_VAR SEMICOLON SUBTHROW
ASSIGNMENT -> VARIABLE ASSIGNMENT_OPERATOR B_VAR
CONDITION -> B_VAR RELATIONAL_OPERATOR B_VAR
CONDITION -> LPR B_VAR RELATIONAL_OPERATOR NUMBER RPR
CONDITION -> B_VAR RELATIONAL_OPERATOR B_VAR LOGICAL_OPERATOR CONDITION
CONDITION -> B_VAR
ADD -> add
SUBTRACT -> subtr
MULT -> mult
DIV -> div
MOD -> mod
POWER -> MULT MULT
ARITHMETIC_OPERATOR -> ADD
ARITHMETIC_OPERATOR -> SUBTRACT
ARITHMETIC_OPERATOR -> MULT
ARITHMETIC_OPERATOR -> DIV
ARITHMETIC_OPERATOR -> MOD
ARITHMETIC_OPERATOR -> POWER
B_VAR -> VALUE
B_VAR -> LPR VALUE RPR
B_VAR -> VARIABLE
B_VAR -> VARIABLE LPR RPR
B_VAR -> VARIABLE LPR PARAM RPR
B_VAR -> LPR VARIABLE RPR
B_VAR -> LPR B_VAR RPR
B_VAR -> SUBTRACT B_VAR
B_VAR -> B_VAR ARITHMETIC_OPERATOR B_VAR
DECLARATION -> VARBS VARIABLE ASSIGN_OPERATOR B_VAR
DECLARATION -> VARBS VARIABLE
DECLARATION -> VARIABLE ASSIGN_OPERATOR B_VAR
DECLARATION -> VARIABLE
DECLARATION -> VARIABLE INCRE
DECLARATION -> VARIABLE DECRE
DECLARATION -> DELETE VARIABLE
DECLARATION -> RETURN B_VAR
DECLARATION -> RETURN
RETURN -> return
DELETE -> delete
EQUAL -> equal
PLUSEQ -> pluseq
SUBEQ -> subuseq
MULTEQ -> multeq
DIVEQ -> diveq
MODEQ -> modeq
POWEQ -> poweq
INCRE -> ADD ADD
DECRE -> SUBTRACT SUBTRACT
ASSIGN_OPERATOR -> EQUAL
ASSIGN_OPERATOR -> PLUSEQ
ASSIGN_OPERATOR -> SUBEQ
ASSIGN_OPERATOR -> MULTEQ
ASSIGN_OPERATOR -> DIVEQ
ASSIGN_OPERATOR -> MODEQ
ASSIGN_OPERATOR -> POWEQ
VARBS -> CONST
VARBS -> VAR
VARBS -> LET
NULL -> null
LET -> let
VAR -> var
CONST -> const
VARIABLE -> variable
VALUE -> value
VALUE -> true
VALUE -> false
VALUE -> NULL
SEMICOLON -> semicolon
DOUBLE_DOT -> double_dot
DOT -> dot
LCR -> lcr
RCR -> rcr
LPR -> lpr
RPR -> rpr
RELATIONAL_OPERATOR -> IS_EQUAL
RELATIONAL_OPERATOR -> IS_NOT_EQUAL
RELATIONAL_OPERATOR -> G
RELATIONAL_OPERATOR -> L 
RELATIONAL_OPERATOR -> GE
RELATIONAL_OPERATOR -> LE
RELATIONAL_OPERATOR -> IS_EQUALS
RELATIONAL_OPERATOR -> IS_NOT_EQUALS
PARAM -> B_VAR
PARAM -> VARIABLE
PARAM -> VARIABLE COMMA PARAM
IS_EQUAL -> is_equal
IS_EQUALS -> is_equals
IS_NOT_EQUAL -> is_not_equal
IS_NOT_EQUALS -> is_not_equals
G -> g
L -> l
GE -> ge
LE -> le
